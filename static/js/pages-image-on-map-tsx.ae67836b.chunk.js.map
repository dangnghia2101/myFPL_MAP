{"version":3,"sources":["util/tileLayer.js","util/coordinatesFPOLY.ts","pages/image-on-map.tsx"],"names":["tileLayer","attribution","url","HCM_LOCATION","pointerIcon","L","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","customPopup","Box","width","zIndex","ImageList","sx","height","cols","rowHeight","img","title","map","item","ImageListItem","src","srcSet","alt","loading","style","Button","marginTop","marginBottom","color","variant","imageBounds","OverlayImage","locationEnd","locationStart","setLengthRun","useMap","routeControl","useRef","useEffect","console","log","current","removeControl","Routing","control","waypoints","latLng","routeWhileDragging","addWaypoints","fitSelectedRoutes","showAlternatives","show","plan","createMarker","i","wp","iconOptions","markerOptions","clickable","draggable","icon","marker","addTo","on","e","summary","routes","totalDistance","Math","round","totalTime","ImageOverlay","bounds","opacity","MapWrapper","useState","setMap","tipChoose","searchStart","setSearchStart","searchEnd","setSearchEnd","searchFind","setSearchFind","locationFind","setLocationFind","setLocationStart","setLocationEnd","lengthRun","React","anchorElStart","setAnchorElStart","setOpenDetailBuilding","coords","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","openMenuSearch","Boolean","handleClick","event","position","currentTarget","handleCloseMenu","location","dataChoosoe","setZoom","panTo","LatLng","alignItems","justifyContent","display","flexDirection","TextField","id","type","value","onChange","target","borderRadius","backgroundColor","borderWidth","paddingLeft","paddingRight","placeholder","InputProps","startAdornment","Search","marginRight","disableUnderline","fontSize","onClick","Flag","LocationOn","Menu","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","latitude","longitude","right","MapContainer","whenCreated","center","zoom","maxZoom","scrollWheelZoom","TileLayer","Marker","eventHandlers","click","Popup","keepInView"],"mappings":"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","file":"static/js/pages-image-on-map-tsx.ae67836b.chunk.js","sourcesContent":["const tileLayer = {\n  attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n}\n\nexport default tileLayer;","export const HCM_LOCATION = {\n  building_P: [10.852916504306314, 106.62954760810882],\n  building_F: [10.852444375030386, 106.62700708526064],\n  building_T: [10.853901075103213, 106.6263560413163],\n};\n","import {\n  MapContainer,\n  TileLayer,\n  ImageOverlay,\n  Marker,\n  useMap,\n  Popup,\n} from \"react-leaflet\";\nimport React, { useState, useEffect, useRef, FC } from \"react\";\nimport L, {\n  Control,\n  IconOptions,\n  LatLngBoundsExpression,\n  LatLngExpression,\n} from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport newMarker from \"../data/pin.png\";\nimport tileLayer from \"../util/tileLayer\";\n// import \"leaflet-routing-machine\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine\";\nimport { useGeolocated } from \"react-geolocated\";\nimport { Box, Container } from \"@mui/system\";\nimport {\n  Button,\n  ImageList,\n  ImageListItem,\n  Menu,\n  MenuItem,\n  MenuList,\n  TextField,\n} from \"@mui/material\";\nimport { AccountCircle, Flag, LocationOn, Search } from \"@mui/icons-material\";\nimport { HCM_LOCATION } from \"../util/coordinatesFPOLY\";\nimport \"./style_test.css\";\nimport { BottomSheet } from \"react-spring-bottom-sheet\";\n\nconst itemData = [\n  {\n    img: \"https://lh5.googleusercontent.com/p/AF1QipOcmayZe5vz5YxFYK0JCC6-0naNMHXCj3qBJuUw=s812-k-no\",\n    title: \"Breakfast\",\n  },\n  {\n    img: \"https://lh5.googleusercontent.com/p/AF1QipOLLAQ82xx_eXMM_hUyDMY7kp3oWD8Lkc7dLo3L=w203-h270-k-no\",\n    title: \"Burger\",\n  },\n  {\n    img: \"https://lh5.googleusercontent.com/p/AF1QipNrmVPu6ZNqMp2hi4xQi2teobNHMUpX5909DibF=s1160-k-no-pi0-ya20-ro0-fo100\",\n    title: \"Camera\",\n  },\n];\n\nconst pointerIcon = new L.Icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/5193/5193743.png\",\n  iconSize: [50, 50], // size of the icon\n  iconAnchor: [20, 58], // changed marker icon position\n  popupAnchor: [0, -60], // changed popup position\n});\n\ntype OverLayProps = {\n  locationEnd: any;\n  locationStart: any;\n  setLengthRun: any;\n};\n\nconst customPopup = (\n  <Box width={\"100%\"} zIndex={10000}>\n    <ImageList sx={{ width: 500, height: 200 }} cols={3} rowHeight={164}>\n      {itemData.map((item) => (\n        <ImageListItem key={item.img}>\n          <img\n            src={`${item.img}?w=164&h=164&fit=crop&auto=format`}\n            srcSet={`${item.img}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\n            alt={item.title}\n            loading=\"lazy\"\n            style={{\n              height: 150,\n            }}\n          />\n        </ImageListItem>\n      ))}\n    </ImageList>\n    <Button\n      style={{ marginTop: 20, marginBottom: 20 }}\n      color=\"success\"\n      variant=\"contained\"\n    >\n      Dẫn đường\n    </Button>\n    <Box>\n      Với triết lý đào tạo “Thực học – Thực nghiệp”, Cao đẳng FPT Polytechnic\n      hướng tới đào tạo nguồn nhân lực chất lượng cao với phương pháp giảng dạy\n      qua dự án thật.\n    </Box>\n  </Box>\n);\n\n// image\nconst imageUrl =\n  \"https://firebasestorage.googleapis.com/v0/b/duantotnghiep-e8aff.appspot.com/o/images%2FmapHCM_photos_v2_x4_colored.jpg?alt=media&token=39546f12-1055-4fd1-abbe-7687594b1ad3\";\n\n// add image to map ;)\nconst imageBounds: LatLngBoundsExpression = [\n  [10.8398, 106.61814], //position x, y\n  // [10.8398, 146.61814], //position x, y\n  [10.8478, 106.62804],\n]; //         widtth\n\nconst OverlayImage: FC<OverLayProps> = ({\n  locationEnd,\n  locationStart,\n  setLengthRun,\n}) => {\n  const map = useMap();\n  const routeControl = useRef<Control>();\n\n  useEffect(() => {\n    if (locationEnd && locationStart) {\n      console.log(\"routeControl.current \", routeControl.current);\n      if (routeControl.current) {\n        map.removeControl(routeControl.current);\n      }\n\n      routeControl.current = L.Routing.control({\n        waypoints: [\n          L.latLng(locationStart[0], locationStart[1]),\n          L.latLng(locationEnd[0], locationEnd[1]),\n        ],\n\n        // lineOptions: {\n        //   styles: [{ color: \"orange\", opacity: 1, weight: 5 }],\n        // },\n        routeWhileDragging: true,\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        showAlternatives: false,\n        // draggableWaypoints: false, NEW\n        show: false,\n        plan: L.Routing.plan(\n          [\n            L.latLng(locationStart[0], locationStart[1]),\n            L.latLng(locationEnd[0], locationEnd[1]),\n          ],\n          {\n            createMarker: function (i, wp) {\n              var iconOptions: IconOptions = {\n                iconUrl:\n                  i === 0\n                    ? \"https://www.freeiconspng.com/thumbs/bee-png/best-free-bee-png-image-5.png\"\n                    : \"https://cdn-icons-png.flaticon.com/512/424/424052.png\",\n                iconSize: [50, 50],\n              };\n              // Creating a custom icon\n\n              // Creating Marker Options\n              var markerOptions = {\n                title: \"MyLocation\",\n                clickable: true,\n                draggable: true,\n                icon: L.icon(iconOptions),\n              };\n\n              return L.marker(wp.latLng, markerOptions);\n            },\n          }\n        ),\n        // autoRoute: true,\n      })\n        .addTo(map)\n        .on(\"routesfound\", function (e) {\n          var routes = e.routes;\n          var summary = routes[0].summary;\n          // alert distance and time in km and minutes\n          setLengthRun(\n            \"Quãng đường: \" +\n              summary.totalDistance +\n              \" m \\n Thời gian di chuyển \" +\n              Math.round((summary.totalTime % 3600) / 45) +\n              \" phút\"\n          );\n        });\n    }\n  }, [locationEnd, locationStart]);\n\n  return (\n    <ImageOverlay\n      url={imageUrl}\n      // fitBounds={true}\n      bounds={imageBounds}\n      opacity={1}\n    />\n  );\n};\n\nconst MapWrapper = () => {\n  const [map, setMap] = useState<any>(null);\n  const tipChoose = useRef<Number>(1);\n  const [searchStart, setSearchStart] = useState(\"\");\n  const [searchEnd, setSearchEnd] = useState(\"\");\n  const [searchFind, setSearchFind] = useState(\"\");\n  const [locationFind, setLocationFind] = useState<any>(\n    HCM_LOCATION.building_T\n  );\n  const [locationStart, setLocationStart] = useState();\n  const [locationEnd, setLocationEnd] = useState();\n  const [lengthRun, setLengthRun] = useState(\"\");\n  const [anchorElStart, setAnchorElStart] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [openDetailBuilding, setOpenDetailBuilding] = useState(false);\n\n  const { coords } = useGeolocated({\n    positionOptions: {\n      enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 10000,\n  });\n\n  const openMenuSearch = Boolean(anchorElStart);\n  const handleClick = (\n    event: React.MouseEvent<HTMLElement>,\n    position: Number\n  ) => {\n    setAnchorElStart(event.currentTarget);\n    tipChoose.current = position;\n  };\n  const handleClose = () => {\n    setAnchorElStart(null);\n  };\n\n  const handleCloseMenu = (location: any, dataChoosoe: string) => {\n    setLocationFind(location);\n    setAnchorElStart(null);\n    map.setZoom(17);\n\n    map.panTo(new L.LatLng(location[0], location[1]));\n\n    switch (tipChoose.current) {\n      case 1:\n        setSearchFind(dataChoosoe);\n        break;\n      case 2:\n        setSearchStart(dataChoosoe);\n        setLocationStart(location);\n        break;\n      case 3:\n        setSearchEnd(dataChoosoe);\n        setLocationEnd(location);\n        break;\n      default:\n        console.log(\"[Defaul]\");\n    }\n  };\n\n  return (\n    <Box height=\"100%\" width=\"100%\" position=\"fixed\">\n      <Box\n        width=\"100%\"\n        alignItems=\"center\"\n        height={120}\n        zIndex={1000}\n        justifyContent=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n      >\n        <TextField\n          id=\"search-find\"\n          variant=\"standard\"\n          type=\"text\"\n          value={searchFind}\n          onChange={(e) => setSearchFind(e.target.value)}\n          style={{\n            borderRadius: 15,\n            backgroundColor: \"#f1c232\",\n            borderWidth: 0,\n            paddingLeft: 10,\n            paddingRight: 10,\n            height: 30,\n            justifyContent: \"center\",\n            width: 300,\n          }}\n          placeholder=\"Nhập địa điểm tìm kiếm\"\n          InputProps={{\n            startAdornment: (\n              <Search style={{ width: 16, color: \"white\", marginRight: 5 }} />\n            ), // <== adjusted this\n            disableUnderline: true, // <== added this\n            style: { fontSize: 12, color: \"white\" },\n          }}\n          onClick={(e) => {\n            handleClick(e, 1);\n          }}\n        />\n        <TextField\n          id=\"search-start\"\n          variant=\"standard\"\n          type=\"text\"\n          value={searchStart}\n          onChange={(e) => setSearchStart(e.target.value)}\n          style={{\n            borderRadius: 15,\n            backgroundColor: \"#f1c232\",\n            borderWidth: 0,\n            paddingLeft: 10,\n            paddingRight: 10,\n            height: 30,\n            justifyContent: \"center\",\n            width: 300,\n            marginTop: 10,\n          }}\n          placeholder=\"Nhập địa điểm bắt đầu\"\n          InputProps={{\n            startAdornment: (\n              <Flag style={{ width: 16, color: \"white\", marginRight: 5 }} />\n            ), // <== adjusted this\n            disableUnderline: true, // <== added this\n            style: { fontSize: 12, color: \"white\" },\n          }}\n          onClick={(e) => {\n            handleClick(e, 2);\n          }}\n        />\n        <TextField\n          id=\"search-end\"\n          variant=\"standard\"\n          type=\"text\"\n          value={searchEnd}\n          onChange={(e) => setSearchEnd(e.target.value)}\n          style={{\n            borderRadius: 15,\n            backgroundColor: \"#f1c232\",\n            borderWidth: 0,\n            paddingLeft: 10,\n            paddingRight: 10,\n            height: 30,\n            justifyContent: \"center\",\n            width: 300,\n            marginTop: 10,\n          }}\n          placeholder=\"Nhập địa điểm kết thúc\"\n          InputProps={{\n            startAdornment: (\n              <LocationOn\n                style={{ width: 16, color: \"white\", marginRight: 5 }}\n              />\n            ), // <== adjusted this\n            disableUnderline: true, // <== added this\n            style: { fontSize: 12, color: \"white\" },\n          }}\n          onClick={(e) => {\n            handleClick(e, 3);\n          }}\n        />\n        <Menu\n          id=\"menu-start\"\n          open={openMenuSearch}\n          anchorEl={anchorElStart}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          style={{ marginTop: 30 }}\n        >\n          <MenuItem\n            onClick={() => handleCloseMenu(HCM_LOCATION.building_P, \"Toà P\")}\n          >\n            Toà P\n          </MenuItem>\n          <MenuItem\n            onClick={() => handleCloseMenu(HCM_LOCATION.building_T, \"Toà T\")}\n          >\n            Toà T\n          </MenuItem>\n          <MenuItem\n            onClick={() => handleCloseMenu(HCM_LOCATION.building_F, \"Toà F\")}\n          >\n            Toà F\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              if (coords?.latitude && coords?.longitude) {\n                handleCloseMenu(\n                  [coords?.latitude, coords?.longitude],\n                  \"Vị trí của tôi\"\n                );\n              }\n            }}\n          >\n            Vị trí của tôi\n          </MenuItem>\n        </Menu>\n\n        <Box right={100} height={120} zIndex={1000} position=\"absolute\">\n          {lengthRun}\n        </Box>\n      </Box>\n\n      <MapContainer\n        style={{ height: \"100%\", width: \"100%\" }}\n        whenCreated={setMap}\n        center={locationFind}\n        zoom={17}\n        maxZoom={22}\n        scrollWheelZoom={true}\n      >\n        <TileLayer {...tileLayer} />\n\n        <Marker\n          icon={pointerIcon}\n          position={locationFind}\n          eventHandlers={{\n            click: (e) => {\n              // map.setView(e.target.getLatLng(), 15);\n              setOpenDetailBuilding(true);\n            },\n          }}\n        >\n          <Popup keepInView={true}>{customPopup}</Popup>\n        </Marker>\n\n        <OverlayImage\n          locationStart={locationStart}\n          locationEnd={locationEnd}\n          setLengthRun={setLengthRun}\n        />\n      </MapContainer>\n    </Box>\n  );\n};\n\nconst styles = {\n  //style for font size\n  resize: {\n    fontSize: 50,\n  },\n};\n\nexport default MapWrapper;\n"],"sourceRoot":""}